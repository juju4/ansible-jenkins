---

- name: use public IP address as hostname/external url
  set_fact:
    jenkins_public_hostname: "{{ ansible_eth0.ipv4.address }}"
    gitlab_external_url: "http://{{ ansible_eth0.ipv4.address }}:{{ gitlab_nginx_listen_port }}/"
  when: ansible_eth0.ipv4.address is defined

- name: Include version-specific variables for Ubuntu.
  include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
  when: ansible_distribution == 'Ubuntu'
- name: Include version-specific variables for RedHat
  include_vars: "RedHat-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_os_family == "RedHat" or ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- include: debian.yml
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- include: redhat.yml
  when: ansible_os_family == "RedHat" or ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: configure git so jenkins can interact w github
  template: "src=gitconfig.j2 dest={{ jenkins_root }}/.gitconfig mode=0644 owner=jenkins group=jenkins backup=yes"
  when: jenkins_git_email is defined

- name: configure jenkins config
  template: "src=jenkins-config.xml.j2 dest={{ jenkins_root }}/config.xml mode=0644 owner=jenkins group=jenkins backup=yes"
- name: configure jenkins smtp server
  template: "src=hudson.tasks.Mailer.xml.j2 dest={{ jenkins_root }}/hudson.tasks.Mailer.xml mode=0644 owner=jenkins group=jenkins backup=yes"
  when: jenkins_smtphost is defined and jenkins_smtphost != ""

- name: create ssh key for jenkins user
  user: name=jenkins generate_ssh_key=yes ssh_key_comment="jenkins-key-for-{{ inventory_hostname }}" ssh_key_type={{ item }}
  with_items: "{{ jenkins_user_sshkeytypes }}"

- name: check permissions of secrets directory
  file: "dest={{ jenkins_root }}/secrets state=directory mode=0700"

- block:
    - name: upload job examples
      template: "src={{ item }} dest={{ jenkins_root }}/{{ item | basename }} mode=0644 backup=yes"
      with_items: "{{ jenkins_job_examples }}"
    - name: login
      command: "java -jar /opt/jenkins-cli.jar -s http://localhost:{{ jenkins_http_port }}/{{ jenkins_url_prefix }} login --username {{ jenkins_admin_username }} --password {{ jenkins_admin_password }}"
      ignore_errors: true
    - include: "jenkins-create-job.yml job_name={{ item[:-4] }}"
      with_items: "{{ jenkins_job_examples }}"
    ## FIXME! how to be idempotent
      ignore_errors: true
  when: jenkins_job_examples is defined and jenkins_job_examples != []

- name: set configuration for nginx as reverse proxy
  template: src=nginx.conf.j2 dest=/etc/nginx/sites-available/jenkins mode=0644 backup=yes
  notify:
    - restart nginx
- name: enabled configuration for nginx as reverse proxy
  file: src=/etc/nginx/sites-available/jenkins dest=/etc/nginx/sites-enabled/jenkins state=link
  notify:
    - restart nginx
- name: disable default configuration for nginx
  file: dest=/etc/nginx/sites-enabled/default state=absent
  notify:
    - restart nginx

- include: monit.yml

- name: Ensure nrpe.d dir exists
  file: dest=/etc/nagios/nrpe.d state=directory mode=0755
- name: add some nrpe commands for monitoring
  template: src=jenkins-nrpe.cfg.j2 dest=/etc/nagios/nrpe.d/jenkins-nrpe.cfg mode=0644 backup=yes


- include: backup-restore.yml

#- include: dashing.yml

- include: firewall-ufw.yml
  when: jenkins_ufw is defined and jenkins_ufw

## we enforce that jenkins is available at the end of the role and it is slow start so...
- meta: flush_handlers
- name: Wait for Jenkins to be available before ending.
  shell: "curl -D - --silent --max-time 5 http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}/cli/"
  register: result
  until: (result.stdout.find("403 Forbidden") != -1) or (result.stdout.find("200 OK") != -1) and (result.stdout.find("Please wait while") == -1)
  retries: "{{ jenkins_connection_retries }}"
  delay: "{{ jenkins_connection_delay }}"
  changed_when: false

